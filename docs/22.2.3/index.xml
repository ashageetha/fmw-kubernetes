<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oracle Fusion Middleware on Kubernetes</title>
    <link>/fmw-kubernetes/22.2.3/</link>
    <description>Recent content on Oracle Fusion Middleware on Kubernetes</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 18 Apr 2019 06:46:23 -0500</lastBuildDate>
    
	<atom:link href="/fmw-kubernetes/22.2.3/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Domain resource sizing</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/wcp-cluster-sizing-info/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/wcp-cluster-sizing-info/</guid>
      <description>Oracle WebCenter Portal cluster sizing recommendations    WebCenter Portal Normal Usage Moderate Usage High Usage     Admin Server No of CPU(s) : 1, Memory : 4GB No of CPU(s) : 1, Memory : 4GB No of CPU(s) : 1, Memory : 4GB   Number of Managed Server No of Servers : 2 No of Servers : 2 No of Servers : 3   Configurations per Managed Server No of CPU(s) : 2, Memory : 16GB No of CPU(s) : 4, Memory : 16GB No of CPU(s) : 6, Memory : 16-32GB   PV Storage Minimum 250GB Minimum 250GB Minimum 500GB    </description>
    </item>
    
    <item>
      <title>Traefik</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/traefik/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/traefik/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install the ingress-based Traefik load balancer (version 2.2.1 or later for production deployments) and configure it for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up Traefik as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
  Non-SSL and SSL termination
 Install the Traefik (ingress-based) load balancer Configure Traefik to manage ingresses Create an Ingress for the domain Verify domain application URL access Uninstall the Traefik ingress    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>Release Notes</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/release-notes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/release-notes/</guid>
      <description>Recent changes    Date Version Change     May 28, 2022 22.2.2 Only Oracle WebCenter Portal 12.2.1.4 is supported and certified with the WebLogic Kubernetes operator version 3.3.0.   June 30, 2021 21.2.3 Only Oracle WebCenter Portal 12.2.1.4 is supported and certified with the WebLogic Kubernetes operator version 3.1.1.    </description>
    </item>
    
    <item>
      <title>Quick start deployment on-premise</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/quickstart-deployment-on-prem/</link>
      <pubDate>Thu, 18 Jun 2020 15:27:38 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/quickstart-deployment-on-prem/</guid>
      <description>Use this Quick Start to create an Oracle WebCenter Portal domain deployment in a Kubernetes cluster (on-premise environments) with the WebLogic Kubernetes Operator. Note that this walkthrough is for demonstration purposes only, not for use in production. These instructions assume that you are already familiar with Kubernetes. If you need more detailed instructions, refer to the Install Guide.
Hardware requirements The Linux kernel supported for deploying and running Oracle WebCenter Portal domains with the operator is Oracle Linux 7 (UL6+) and Red Hat Enterprise Linux 7 (UL3+ only with standalone Kubernetes).</description>
    </item>
    
    <item>
      <title>NGINX</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/nginx/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/nginx/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install the ingress-based NGINX load balancer and configure NGINX for non-SSL, SSL termination, and end-to-end SSL access of the application URL. Follow these steps to set up NGINX as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
See the official installation document for prerequisites.
  Non-SSL and SSL termination
 Install the NGINX load balancer Configure NGINX to manage ingresses Verify non-SSL and SSL termination access    End-to-end SSL configuration</description>
    </item>
    
    <item>
      <title>Security hardening</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/docker-k8s-hardening/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/docker-k8s-hardening/</guid>
      <description>Securing a Kubernetes cluster involves hardening on multiple fronts - securing the API servers, etcd, nodes, container images, container run-time, and the cluster network. Apply principles of defense in depth, principle of least privilege, and minimize the attack surface. Use security tools such as Kube-Bench to verify the cluster&amp;rsquo;s security posture. Since Kubernetes is evolving rapidly refer to Kubernetes Security Overview for the latest information on securing a Kubernetes cluster. Also ensure the deployed Docker containers follow the Docker Security guidance.</description>
    </item>
    
    <item>
      <title>Apache webtier</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/apachewebtier/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/manage-wcportal-domains/configure-load-balancer/apachewebtier/</guid>
      <description>To load balance Oracle WebCenter Portal domain clusters, you can install Apache webtier and configure it for non-SSL and SSL termination access of the application URL. Follow these steps to set up Apache webtier as a load balancer for an Oracle WebCenter Portal domain in a Kubernetes cluster:
 Build the Apache webtier image Create the Apache plugin configuration file Prepare the certificate and private key Install the Apache webtier Helm chart Verify domain application URL access Uninstall Apache webtier  Build the Apache webtier image To build the Apache webtier Docker image, refer to the sample.</description>
    </item>
    
    <item>
      <title>Additional Configuration</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/additional-configuration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/appendix/additional-configuration/</guid>
      <description>Creating a Connection to Oracle WebCenter Content Server To enable content integration within Oracle WebCenter Portal create a connection to Oracle WebCenter Content Server using JAX-WS. Follow the steps in the documentation link to create the connection.
 Note: If the Oracle WebCenter Content Server is configured with SSL, before creating the connection, the SSL certificate should be imported into any location under mount path of domain persistent volume to avoid loss of certificate due pod restart.</description>
    </item>
    
    <item>
      <title>Uninstall an Oracle WebCenter Portal domain</title>
      <link>/fmw-kubernetes/22.2.3/wcportal-domains/cleanup-domain-setup/</link>
      <pubDate>Fri, 22 Feb 2019 15:44:42 -0500</pubDate>
      
      <guid>/fmw-kubernetes/22.2.3/wcportal-domains/cleanup-domain-setup/</guid>
      <description>To clean up the Oracle WebCenter Portal domain setup, follow the steps below.
Delete the Generated Domain Home To remove a domain home that you generated by running the create-domain.sh script in your production or testing environment, use the delete-domain-job.yaml file located at, &amp;lt;$WORKDIR&amp;gt;/create-wcp-domain/domain-home-on-pv/output/weblogic-domains/wcp-domain&amp;gt; directory.
$ kubectl create -f delete-domain-job.yaml Clean Up the create-domain-job script After Execution Failure To clean up the create-domain-job script:
  Get the create domain job and configmaps:</description>
    </item>
    
  </channel>
</rss>